<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GuildName" xml:space="preserve">
    <value>Gildename</value>
  </data>
  <data name="ChannelName" xml:space="preserve">
    <value>Kanalname</value>
  </data>
  <data name="EmbedTitle" xml:space="preserve">
    <value>Titel</value>
  </data>
  <data name="EmbedDescription" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="EmbedModalTitle" xml:space="preserve">
    <value>Embed erzeugen</value>
  </data>
  <data name="ModalClose" xml:space="preserve">
    <value>Schließen</value>
  </data>
  <data name="ModalSubmit" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="AddEmbed" xml:space="preserve">
    <value>Embed hinzufügen</value>
  </data>
  <data name="SelectGuild" xml:space="preserve">
    <value>Gilde auswählen</value>
  </data>
  <data name="SelectChannel" xml:space="preserve">
    <value>Kanal auswählen</value>
  </data>
  <data name="EditEmbed" xml:space="preserve">
    <value>Embed bearbeiten</value>
  </data>
  <data name="DuplicateEmbed" xml:space="preserve">
    <value>Duplizieren</value>
  </data>
  <data name="EmbedModalAlternateText" xml:space="preserve">
    <value>Dieses Embed hat keine Daten, wahrscheinlich weil kein Kanal ausgewählt wurde.</value>
  </data>
  <data name="EmbedField" xml:space="preserve">
    <value>Feld</value>
  </data>
  <data name="EmbedFields" xml:space="preserve">
    <value>Felder</value>
  </data>
  <data name="NewEmbedField" xml:space="preserve">
    <value>Feld hinzufügen</value>
  </data>
  <data name="EmbedInline" xml:space="preserve">
    <value>Eingereiht</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Aktionen</value>
  </data>
  <data name="EmbedFieldName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="EmbedFieldValue" xml:space="preserve">
    <value>Wert</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Autor</value>
  </data>
  <data name="AuthorName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="AuthorImage" xml:space="preserve">
    <value>Profilbild</value>
  </data>
  <data name="AuthorUrl" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="AddAuthor" xml:space="preserve">
    <value>Autor hinzufügen</value>
  </data>
  <data name="EditAuthor" xml:space="preserve">
    <value>Edit Author</value>
  </data>
  <data name="AuthorModalText" xml:space="preserve">
    <value>Dieser Autor hat bisher noch keine Daten.</value>
  </data>
  <data name="SelectAuthor" xml:space="preserve">
    <value>Autor auswählen</value>
  </data>
  <data name="EmbedColor" xml:space="preserve">
    <value>Farbe</value>
  </data>
  <data name="EmbedFooter" xml:space="preserve">
    <value>Fußnote</value>
  </data>
  <data name="EmbedFooterName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="EmbedFooterIconUrl" xml:space="preserve">
    <value>Bild Url</value>
  </data>
  <data name="EmbedImageUrl" xml:space="preserve">
    <value>Bild Url</value>
  </data>
  <data name="EmbedThumbnailUrl" xml:space="preserve">
    <value>Miniaturansicht Url</value>
  </data>
  <data name="EmbedUrl" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="Button" xml:space="preserve">
    <value>Knopf</value>
  </data>
  <data name="ComponentLabel" xml:space="preserve">
    <value>Beschriftung</value>
  </data>
  <data name="ComponentEnabled" xml:space="preserve">
    <value>Aktiviert</value>
  </data>
  <data name="SelectComponentStyle" xml:space="preserve">
    <value>Aussehen auswählen</value>
  </data>
  <data name="ComponentEmote" xml:space="preserve">
    <value>Emoji</value>
  </data>
  <data name="ComponentUrl" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="ComponentEmbedTitle" xml:space="preserve">
    <value>Embedtitel</value>
  </data>
  <data name="EditButton" xml:space="preserve">
    <value>Knopf bearbeiten</value>
  </data>
  <data name="AddButton" xml:space="preserve">
    <value>Button hinzufügen</value>
  </data>
  <data name="ComponentStyle" xml:space="preserve">
    <value>Stil</value>
  </data>
  <data name="SelectButton" xml:space="preserve">
    <value>Button auswählen</value>
  </data>
  <data name="EmbedButtons" xml:space="preserve">
    <value>Knöpfe</value>
  </data>
  <data name="ModalTitle" xml:space="preserve">
    <value>Titel</value>
  </data>
  <data name="EditModal" xml:space="preserve">
    <value>Modal bearbeiten</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="DuplicateModal" xml:space="preserve">
    <value>Duplizieren</value>
  </data>
  <data name="ModalComponents" xml:space="preserve">
    <value>Komponenten</value>
  </data>
  <data name="AddModal" xml:space="preserve">
    <value>Modal hinzufügen</value>
  </data>
  <data name="ModalModalAlternateText" xml:space="preserve">
    <value>Dieses Modal hat noch keine Daten geladen.</value>
  </data>
  <data name="ModalComponent" xml:space="preserve">
    <value>Komponente</value>
  </data>
  <data name="NewModalComponent" xml:space="preserve">
    <value>Komponente hinzufügen</value>
  </data>
  <data name="ComponentPlaceholder" xml:space="preserve">
    <value>Platzhalter</value>
  </data>
  <data name="ComponentMinLength" xml:space="preserve">
    <value>Minimale Länge</value>
  </data>
  <data name="ComponentMaxLength" xml:space="preserve">
    <value>Maximale Länge</value>
  </data>
  <data name="ComponentRequired" xml:space="preserve">
    <value>Benötigt</value>
  </data>
  <data name="ComponentDefaultValue" xml:space="preserve">
    <value>Standardwert</value>
  </data>
</root>